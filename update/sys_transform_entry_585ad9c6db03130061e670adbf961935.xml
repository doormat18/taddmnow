<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_transform_entry">
    <sys_transform_entry action="INSERT_OR_UPDATE">
        <choice_action>create</choice_action>
        <coalesce>true</coalesce>
        <coalesce_case_sensitive>false</coalesce_case_sensitive>
        <coalesce_empty_fields>false</coalesce_empty_fields>
        <date_format>yyyy-MM-dd HH:mm:ss</date_format>
        <map display_value="TADDM CompSys">74915ac9db03130061e670adbf96192e</map>
        <reference_value_field/>
        <source_field>[Script]</source_field>
        <source_script><![CDATA[/*****************************************************
 *  This script builds the necessary info for identification purposes.
 *****************************************************/
var IMPORT_NAME = "TADDM";
var SOURCE_MSG = "Import transform entry script";
var ciData = buildCIData();
var TADDM_CI = IMPORT_NAME + " import CI: " + ciData.items[0].values.name + " (" + source.u_guid.toString() + ")";

answer = start();

function start() {

	var jsonUtil = new global.JSON();
	var input = jsonUtil.encode(ciData);
	var output = sn_cmdb.IdentificationEngine.identifyCI(input);
	var result = jsonUtil.decode(output);
	
	var items = result.items;
	
	var item = items[0];
	if (!nil(item.errors))
	{
		logInfo(TADDM_CI + " input - " + input);
		// log all errors
		var errors = [];
		item.errors.forEach(function(error) {
			if (error.error != 'ABANDONED') { errors.push(error.error + ': ' + error.message); }
		});
		for (var i = 0; i < errors.length; i++)
		{
			logInfo(TADDM_CI + " error - " + errors[i]);
		}
		// log ID attempts
		var idAttempts = [];
		item.identificationAttempts.forEach(function(a) {
			idAttempts.push(a.identifierName+': '+a.attemptResult+": "+a.attributes+": "+a.searchOnTable );
		});
		for (var j = 0; j < idAttempts.length; j++)
		{
			logInfo(TADDM_CI + " ID attempt - " + idAttempts[j]);
		}
		
		logNoMatch();
		return null;
	}
	else
	{
		var operation = item['operation'];
		if (operation == 'INSERT')
		{
			logInsert();
			return -1;
		}
		else
		{
			var sysId = item.sysId;

			logUpdate(sysId);
			return sysId;
		}
	}
}

function nil(item)
{
    return (item == null) || (typeof item == 'undefined') || ('' == '' + item);
}

function buildCIData() {
	
    var cClass = TADDMHelper.getComputerClass(source.u_jdoclass);
	var name = TADDMHelper.getComputerName(source);
	
	var vmid = source.u_vmid.toString();
	var hostsys_jdoclass = source.u_hostsys_jdoclass.toString();
	var serial = TADDMHelper.calculateSerial(source.u_serialnumber.toString(), vmid, cClass, hostsys_jdoclass);

	var ciDataObj =
	{items: [{className:cClass,
		values: {
			name:name,
			serial_number:serial,
			ip_address:source.u_ipaddress.toString(),
			x_20712_taddm_now_taddm_guid:source.u_guid.toString(),
			fqdn:source.u_fqdn.toString(),
			discovery_source:'IBM Discovery',
			os:source.u_osname.toString(),
			correlation_id:source.u_guid.toString()}}]
	};

	return ciDataObj;
}

function logInfo(msg)
{
	log.info("[" + (new GlideDateTime()).getNumericValue() + "] " + msg);
}

function logUpdate(matchSysId) {
	var rec = new global.RecordToHTML(ciData.items[0].className, matchSysId, ciData.items[0].values.name,  true);
	logInfo(TADDM_CI + " matches [code]" +  rec + "[/code] in the CMDB.");
}

function logInsert() {
	logInfo(TADDM_CI + " will have a record created in the CMDB.");
}

function logNoMatch() {
	logInfo(TADDM_CI + " will not have a record in the CMDB due to multiple matches or lack of matchable information.");
}]]></source_script>
        <source_table>x_20712_taddm_now_compsys</source_table>
        <sys_class_name>sys_transform_entry</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-07-03 13:56:27</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>585ad9c6db03130061e670adbf961935</sys_id>
        <sys_mod_count>70</sys_mod_count>
        <sys_name>[Script]</sys_name>
        <sys_package display_value="TADDM Now" source="x_20712_taddm_now">dd9e5530db43130061e670adbf9619b8</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="TADDM Now">dd9e5530db43130061e670adbf9619b8</sys_scope>
        <sys_update_name>sys_transform_entry_585ad9c6db03130061e670adbf961935</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-09-19 14:38:53</sys_updated_on>
        <target_field>sys_id</target_field>
        <target_table>cmdb_ci_server</target_table>
        <use_source_script>true</use_source_script>
    </sys_transform_entry>
</record_update>
