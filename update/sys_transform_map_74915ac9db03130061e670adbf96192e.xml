<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_transform_map">
    <sys_transform_map action="INSERT_OR_UPDATE">
        <active>true</active>
        <copy_empty_fields>false</copy_empty_fields>
        <enforce_mandatory_fields>No</enforce_mandatory_fields>
        <name>TADDM CompSys</name>
        <order>100</order>
        <run_business_rules>true</run_business_rules>
        <run_script>true</run_script>
        <script><![CDATA[(function transformRow(source, target, map, log, isUpdate) {

	// set manufacturer reference
	var manufacturer = source.u_manufacturer.toString();
	if (gs.nil(manufacturer))
		target.manufacturer = null;

	// lookup or create company
	var gr = new GlideRecord("core_company");
	gr.addQuery("name", manufacturer);
	gr.query();
	if (gr.next())
		target.manufacturer = gr.sys_id + '';
	else {
		gr.initialize();
		gr.setValue("name", manufacturer);
		target.manufacturer = gr.insert();
	}
	
	// set model reference
	var model = source.u_model.toString();
	if (gs.nil(model))
		target.model_id = null;

	gr = new GlideRecord('cmdb_hardware_product_model');
	gr.addQuery("name", model);
	if (!gs.nil(target.manufacturer))
		gr.addQuery("manufacturer", target.manufacturer);
	else
		gr.addNullQuery("manufacturer");
	gr.query();
	if (gr.next())
		target.model_id = gr.sys_id + '';
	else {
		gr.initialize();
		gr.name = model;
		if (!gs.nil(target.manufacturer))
			gr.manufacturer = target.manufacturer;
		target.model_id = gr.insert();
	}	

	// convert bytes to GB
	var bytes = source.u_memorysize.toString();
	
	if (bytes != null && bytes != '') 
	{
		// get RAM label
		var ramLabel = target.ram.getED().getLabel();
		
		var mb = parseFloat(bytes);
		mb = mb / 1024 / 1024;
		
		// check if RAM units are in GB
		if (ramLabel.toLowerCase().indexOf("(gb)") >= 0)
		{
			// convert from mb to gb and round to one decimal
			target.ram = Math.round((mb / 1024) * 10)/10;
		} else {
			// else assume default of MB
			target.ram = Math.round(mb * 10)/10;
		}
	}
	
	// handle delete
	if ( source.u_deleted.toString() == "yes" ) {
		target.x_20712_taddm_now_discovery_status = "2"; // deleted
	} else {
		// mark as actively discovered
		target.x_20712_taddm_now_discovery_status = "1"; // discovered
	}
})(source, target, map, log, action==="update");]]></script>
        <source_table>x_20712_taddm_now_compsys</source_table>
        <sys_class_name>sys_transform_map</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-06-30 14:45:38</sys_created_on>
        <sys_id>74915ac9db03130061e670adbf96192e</sys_id>
        <sys_mod_count>7</sys_mod_count>
        <sys_name>TADDM CompSys</sys_name>
        <sys_package display_value="TADDM Now" source="x_20712_taddm_now">dd9e5530db43130061e670adbf9619b8</sys_package>
        <sys_policy/>
        <sys_scope display_value="TADDM Now">dd9e5530db43130061e670adbf9619b8</sys_scope>
        <sys_update_name>sys_transform_map_74915ac9db03130061e670adbf96192e</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-09-24 19:51:39</sys_updated_on>
        <target_table>cmdb_ci_server</target_table>
    </sys_transform_map>
</record_update>
